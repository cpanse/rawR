name: R-CMD-check-rawrr
env:
    ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    MONO_PATH: '/usr/local/lib/RawFileReader/'
    RAWRR_RELEASE: 'http://fgcz-ms.uzh.ch/~cpanse/rawrr_0.2.0.tar.gz'
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        r-version: [4.0.4]
    steps:
      - uses: actions/checkout@v2

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install Linux packages
        run: sudo apt-get install -y libicu-dev pandoc mono-devel wget unzip texlive texlive-latex-extra texlive-fonts-extra texlive-xetex pandoc-citeproc

      - name: Cache RawFileReader assemblies
        id: cache-RawFileReaderDLLs
        uses: actions/cache@v2
        with:
            path: /usr/local/lib/RawFileReader/
            key: ${{ runner.os }}-RawFileReaderDLLsV2

      - name: Install RawFileReader assemblies
        if: steps.cache-RawFileReaderDLLs.outputs.cache-hit != 'true'
        run: |
          curl --silent $RAWRR_RELEASE | (cd /tmp/ && tar xfvz - --wildcards '*.dll') \
          && sudo mkdir -p $MONO_PATH \
          && sudo find /tmp/rawrr -type f -exec mv -v {} $MONO_PATH \;

      - name: Cache MSV000086542 raw files
        id: cache-MSV000086542_20181113_010_autoQC01
        uses: actions/cache@v2
        with:
            path: ~/Downloads/
            key: ${{ runner.os }}-MSV000086542_20181113_010_autoQC01

      - name: Download MSV000086542 raw files
        if: steps.cache-MSV000086542_20181113_010_autoQC01.outputs.cache-hit != 'true'
        run: |
             mkdir -p ~/Downloads/ \
             && cd ~/Downloads/ \
             && wget ftp://massive.ucsd.edu/MSV000086542/raw/20181113_010_autoQC01.raw

      - name: Cache R packages
        id: cache-RpkgsV2
        uses: actions/cache@v2
        with:
            path: ~/work/_temp/Library/
            key: ${{ runner.os }}-RpkgsV2

      - name: Install required R packages from CRAN and Bioconductor
        if: steps.cache-RpkgsV2.outputs.cache-hit != 'true'
        run: |
             install.packages(c('BiocManager', 'protViz', 'knitr', 'rmarkdown', 'roxygen2', 'testthat', 'rcmdcheck'), repos='https://cloud.r-project.org')
        shell: Rscript {0}

      - name: roxygen2::roxygenise
        run: install.packages('roxygen2'); roxygen2::roxygenise(clean=TRUE); unlink("inst/rawrrassembly/bin/rawrr.exe")
        shell: Rscript {0}

      - name: rcmdcheck::rcmdcheck
        run: rcmdcheck::rcmdcheck(error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: install rawrr
        run: install.packages('rticles'); install.packages('.', repo=NULL)
        shell: Rscript {0}

      - name: List files in home directory
        run: find ~/ -type f > files.txt

      - uses: actions/upload-artifact@v2
        with:
            name: files
            path: files.txt
            if-no-files-found: warn

      - uses: actions/upload-artifact@v2
        with:
            name: rawrr_vignette
            path: check/rawrr.Rcheck/rawrr/doc/rawrr.*
            if-no-files-found: warn

      - uses: actions/upload-artifact@v2
        with:
            name: rawrr_manual
            path: check/rawrr.Rcheck/rawrr-manual.pdf
            if-no-files-found: warn
